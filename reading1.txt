Gartner Insights - misuse of the term “microservice”.

While reading the Gartner paper, a part of it that stood out to me was the brief section titled Frequent Misuse of the Term “Microservices”. I found this section very informative, as someone who didn’t really know what a microservice was prior to starting this course a few weeks ago. Part of understanding what a microservice is, is understanding what a microservice isn’t.

According to the reading, the following concepts are not microservices but are frequently, and incorrectly, assumed to be:


A reusable service
Any software component
Any application deployed in a container

I’m personally guilty of believing some of the same misconceptions. I’ve previously never given much thought to the term “microservice”; I just assumed microservices were reusable components.

However, in reality, reusable services contradict the entire point of microservices, in a way. Reuse creates dependencies, reducing both the independence and agility of the service. Reusable services are simply just services. 

The paper also explains that while all microservices are software components, not all software components are microservices. Microservices need to be independent, tightly-scoped, and they must follow specific design constraints in order to increase agility and scalability. Not all software components fit that definition.

Similarly, microservices are supposed to be independently deployed - however, unless those aforementioned design constraints are followed, any old application deployed in a container is not classified as a microservice. 

Understanding these common misconceptions is crucial background information for beginners who are building their understanding of what microservice architecture is.